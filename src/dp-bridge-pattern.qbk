[/
	Copyright 2024 xilahua.top

	Distributed under the Boost Software License, Version 1.0.
	(See accompanying file LICENSE_1_0.txt or copy at
	http://www.boost.org/LICENSE_1_0.txt)
]

[article Bridge Pattern @cpp
	[quickbook 1.7]
]

[h1 桥接模式 - cpp]

cpp/c++ 设计模式之桥接模式

桥接模式是一种 c++ 设计模式，它分离了业务逻辑的抽象和实现，并桥接它们。抽象和实现两个部分可以分别独立的变化和更新，而不需要改变另一个部分。

c++ 桥接模式代码比较简单，定义两套类，一套类的基以另一套类的基为成员，各自的继承类并不需要关心基类。

[h1 cpp 桥接模式代码例子]

众所周知，导弹是一种武器，我们可以把导弹叫做武器的实现，把武器叫做导弹的抽象，这只是一种比喻。

导弹也有很多种：巡航导弹、洲际导弹、蜂群导弹，... 。

武器也可以分类：制导武器、静态武器、... 。

missile : 导弹

cruise missile : 巡航导弹

swarm missile : 蜂群导弹

weapon : 武器

guided weapon : 制导武器

[note
	[role green 可以把本文所说的武器、导弹等等等等看成游戏里的概念或者哲学概念，而不是现实里的军事概念，本文对此称呼不负责任。]
]

[* bridge pattern 桥接模式 c++ 代码]

[~bridge-pattern-cpp.cpp]

[!c++]
```
```

[h2 程序输出：]

```
/*
========
导弹发动 ...
巡航导弹正在索敌 ...
蜂群导弹正在索敌 ...
========
武器发动 ...
武器桥接到导弹了：巡航导弹正在索敌 ...
武器桥接到导弹了：蜂群导弹正在索敌 ...
========
制导武器发动 ...
制导武器桥接到导弹了：巡航导弹正在索敌 ...
制导武器桥接到导弹了：蜂群导弹正在索敌 ...
*/
```

[h2 补充说明]

代码例子里用到了多态。

* 基类对象的指针指向了继承类对象是多态 - 上行
* 基类对象引用绑定到了继承类对象是多态 - 上行
* 如果基类里有 virtual 成员函数，那么指针或者引用的反向绑定也是多态 - 下行
* 其它未提及的情况，比如侧行绑定请阅读文档，不再赘述

[h1 相关链接]

[link proxy_pattern_cpp c++ 代理模式]

[h1 首页]

息拉滑: [@https://xilahua.top xilahua.top]

///////////////////

