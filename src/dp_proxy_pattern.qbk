[/
	Copyright 2024 fayige.top

	Distributed under the Boost Software License, Version 1.0.
	(See accompanying file LICENSE_1_0.txt or copy at
	http://www.boost.org/LICENSE_1_0.txt)
]

[article Proxy Pattern @cpp
	[quickbook 1.7]
]

[h1 代理模式 - cpp]

cpp/c++ 设计模式之代理模式

我们在编程时有时会遇到这样一个问题，对于已有的系统, 我们发现有些不足，需要增加或者修改一些代码， 但是我们又不想改变已有的系统，因为它们很“浑圆一体”。这时可以使用代理模式，增加代理代码，而不需要动原来的代码。然后通过对代理代码的访问，来间接访问真正的目标。

3月 - fayige.top

[h1 cpp 代码实现]

c++ 代理模式

还是以游戏中的导弹为例子。

假定原初的代码里，导弹 missile 有 索敌 seek 方法。后来发现，在做 seek 行为之前，最好先检查一下导弹的状态。于是可以设计一个代理类，增加一个方法 ready, 它会检查并返回导弹的状态，状态良好才会做 seek 行为。

missile - 导弹

cruise missile - 巡航导弹

swarm missile - 蜂群导弹

c++ 代理模式代码比较简单

[* c++ 代理模式 proxy pattern 例子]

[import ./cpp/dp_proxy_pattern.cpp]
[dp_proxy_pattern_cpp]

[h1 相关链接]

[link bridge_pattern_cpp c++桥接模式]

[link adapter_pattern_cpp c++适配器模式]

[h1 首页]

发一格: [@https://fayige.top fayige.top]

